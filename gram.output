Terminals unused in grammar

   tERROR


Grammar

    0 $accept: Input $end

    1 Input: Function Input
    2      | /* empty */

    3 Function: tINT tID tPO Params tPC Body

    4 Params: tINT tID ParamsNext
    5       | /* empty */

    6 ParamsNext: tCOM tINT tID ParamsNext
    7           | /* empty */

    8 Condition: Arithm tEEQU Arithm
    9          | Arithm tGTH Arithm
   10          | Arithm tLTH Arithm

   11 Conditions: Condition ConditionsNext
   12           | tPO Condition tPC ConditionsNext

   13 ConditionsNext: tOR Conditions
   14               | tAND Conditions
   15               | /* empty */

   16 If: tIF tPO Conditions tPC Body

   17 While: tWHILE tPO Conditions tPC Body

   18 Arithm: tID ArithmNext
   19       | tNB ArithmNext
   20       | tPO Arithm tPC ArithmNext

   21 ArithmNext: tADD tID ArithmNext
   22           | tSUB tID ArithmNext
   23           | tMUL tID ArithmNext
   24           | tDIV tID ArithmNext
   25           | tADD tNB ArithmNext
   26           | tSUB tNB ArithmNext
   27           | tMUL tNB ArithmNext
   28           | tDIV tNB ArithmNext
   29           | /* empty */

   30 Allocation: tID tEQU Arithm tSM

   31 Declarations: tINT tID DeclarationsNext tSM
   32             | tINT tID tEQU Arithm DeclarationsNext tSM

   33 DeclarationsNext: tCOM tID tEQU Arithm DeclarationsNext
   34                 | tCOM tID DeclarationsNext
   35                 | /* empty */

   36 Body: tBO Content tBC

   37 Print: tPRT tPO tID tPC tSM

   38 Arguments: tID Arguments
   39          | /* empty */

   40 FunctionCall: tID tPO Arguments tPC tSM

   41 Content: If Content
   42        | While Content
   43        | Declarations Content
   44        | Allocation Content
   45        | FunctionCall Content
   46        | Print Content
   47        | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
tID (258) 3 4 6 18 21 22 23 24 30 31 32 33 34 37 38 40
tNB (259) 19 25 26 27 28
tEQU (260) 30 32 33
tADD (261) 21 25
tSUB (262) 22 26
tMUL (263) 23 27
tDIV (264) 24 28
tAND (265) 14
tOR (266) 13
tGTH (267) 9
tLTH (268) 10
tEEQU (269) 8
tPO (270) 3 12 16 17 20 37 40
tPC (271) 3 12 16 17 20 37 40
tBO (272) 36
tBC (273) 36
tCOM (274) 6 33 34
tSM (275) 30 31 32 37 40
tIF (276) 16
tWHILE (277) 17
tPRT (278) 37
tINT (279) 3 4 6 31 32
tERROR (280)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
Input (27)
    on left: 1 2, on right: 0 1
Function (28)
    on left: 3, on right: 1
Params (29)
    on left: 4 5, on right: 3
ParamsNext (30)
    on left: 6 7, on right: 4 6
Condition (31)
    on left: 8 9 10, on right: 11 12
Conditions (32)
    on left: 11 12, on right: 13 14 16 17
ConditionsNext (33)
    on left: 13 14 15, on right: 11 12
If (34)
    on left: 16, on right: 41
While (35)
    on left: 17, on right: 42
Arithm (36)
    on left: 18 19 20, on right: 8 9 10 20 30 32 33
ArithmNext (37)
    on left: 21 22 23 24 25 26 27 28 29, on right: 18 19 20 21 22 23
    24 25 26 27 28
Allocation (38)
    on left: 30, on right: 44
Declarations (39)
    on left: 31 32, on right: 43
DeclarationsNext (40)
    on left: 33 34 35, on right: 31 32 33 34
Body (41)
    on left: 36, on right: 3 16 17
Print (42)
    on left: 37, on right: 46
Arguments (43)
    on left: 38 39, on right: 38 40
FunctionCall (44)
    on left: 40, on right: 45
Content (45)
    on left: 41 42 43 44 45 46 47, on right: 36 41 42 43 44 45 46


State 0

    0 $accept: . Input $end

    tINT  shift, and go to state 1

    $default  reduce using rule 2 (Input)

    Input     go to state 2
    Function  go to state 3


State 1

    3 Function: tINT . tID tPO Params tPC Body

    tID  shift, and go to state 4


State 2

    0 $accept: Input . $end

    $end  shift, and go to state 5


State 3

    1 Input: Function . Input

    tINT  shift, and go to state 1

    $default  reduce using rule 2 (Input)

    Input     go to state 6
    Function  go to state 3


State 4

    3 Function: tINT tID . tPO Params tPC Body

    tPO  shift, and go to state 7


State 5

    0 $accept: Input $end .

    $default  accept


State 6

    1 Input: Function Input .

    $default  reduce using rule 1 (Input)


State 7

    3 Function: tINT tID tPO . Params tPC Body

    tINT  shift, and go to state 8

    $default  reduce using rule 5 (Params)

    Params  go to state 9


State 8

    4 Params: tINT . tID ParamsNext

    tID  shift, and go to state 10


State 9

    3 Function: tINT tID tPO Params . tPC Body

    tPC  shift, and go to state 11


State 10

    4 Params: tINT tID . ParamsNext

    tCOM  shift, and go to state 12

    $default  reduce using rule 7 (ParamsNext)

    ParamsNext  go to state 13


State 11

    3 Function: tINT tID tPO Params tPC . Body

    tBO  shift, and go to state 14

    Body  go to state 15


State 12

    6 ParamsNext: tCOM . tINT tID ParamsNext

    tINT  shift, and go to state 16


State 13

    4 Params: tINT tID ParamsNext .

    $default  reduce using rule 4 (Params)


State 14

   36 Body: tBO . Content tBC

    tID     shift, and go to state 17
    tIF     shift, and go to state 18
    tWHILE  shift, and go to state 19
    tPRT    shift, and go to state 20
    tINT    shift, and go to state 21

    $default  reduce using rule 47 (Content)

    If            go to state 22
    While         go to state 23
    Allocation    go to state 24
    Declarations  go to state 25
    Print         go to state 26
    FunctionCall  go to state 27
    Content       go to state 28


State 15

    3 Function: tINT tID tPO Params tPC Body .

    $default  reduce using rule 3 (Function)


State 16

    6 ParamsNext: tCOM tINT . tID ParamsNext

    tID  shift, and go to state 29


State 17

   30 Allocation: tID . tEQU Arithm tSM
   40 FunctionCall: tID . tPO Arguments tPC tSM

    tEQU  shift, and go to state 30
    tPO   shift, and go to state 31


State 18

   16 If: tIF . tPO Conditions tPC Body

    tPO  shift, and go to state 32


State 19

   17 While: tWHILE . tPO Conditions tPC Body

    tPO  shift, and go to state 33


State 20

   37 Print: tPRT . tPO tID tPC tSM

    tPO  shift, and go to state 34


State 21

   31 Declarations: tINT . tID DeclarationsNext tSM
   32             | tINT . tID tEQU Arithm DeclarationsNext tSM

    tID  shift, and go to state 35


State 22

   41 Content: If . Content

    tID     shift, and go to state 17
    tIF     shift, and go to state 18
    tWHILE  shift, and go to state 19
    tPRT    shift, and go to state 20
    tINT    shift, and go to state 21

    $default  reduce using rule 47 (Content)

    If            go to state 22
    While         go to state 23
    Allocation    go to state 24
    Declarations  go to state 25
    Print         go to state 26
    FunctionCall  go to state 27
    Content       go to state 36


State 23

   42 Content: While . Content

    tID     shift, and go to state 17
    tIF     shift, and go to state 18
    tWHILE  shift, and go to state 19
    tPRT    shift, and go to state 20
    tINT    shift, and go to state 21

    $default  reduce using rule 47 (Content)

    If            go to state 22
    While         go to state 23
    Allocation    go to state 24
    Declarations  go to state 25
    Print         go to state 26
    FunctionCall  go to state 27
    Content       go to state 37


State 24

   44 Content: Allocation . Content

    tID     shift, and go to state 17
    tIF     shift, and go to state 18
    tWHILE  shift, and go to state 19
    tPRT    shift, and go to state 20
    tINT    shift, and go to state 21

    $default  reduce using rule 47 (Content)

    If            go to state 22
    While         go to state 23
    Allocation    go to state 24
    Declarations  go to state 25
    Print         go to state 26
    FunctionCall  go to state 27
    Content       go to state 38


State 25

   43 Content: Declarations . Content

    tID     shift, and go to state 17
    tIF     shift, and go to state 18
    tWHILE  shift, and go to state 19
    tPRT    shift, and go to state 20
    tINT    shift, and go to state 21

    $default  reduce using rule 47 (Content)

    If            go to state 22
    While         go to state 23
    Allocation    go to state 24
    Declarations  go to state 25
    Print         go to state 26
    FunctionCall  go to state 27
    Content       go to state 39


State 26

   46 Content: Print . Content

    tID     shift, and go to state 17
    tIF     shift, and go to state 18
    tWHILE  shift, and go to state 19
    tPRT    shift, and go to state 20
    tINT    shift, and go to state 21

    $default  reduce using rule 47 (Content)

    If            go to state 22
    While         go to state 23
    Allocation    go to state 24
    Declarations  go to state 25
    Print         go to state 26
    FunctionCall  go to state 27
    Content       go to state 40


State 27

   45 Content: FunctionCall . Content

    tID     shift, and go to state 17
    tIF     shift, and go to state 18
    tWHILE  shift, and go to state 19
    tPRT    shift, and go to state 20
    tINT    shift, and go to state 21

    $default  reduce using rule 47 (Content)

    If            go to state 22
    While         go to state 23
    Allocation    go to state 24
    Declarations  go to state 25
    Print         go to state 26
    FunctionCall  go to state 27
    Content       go to state 41


State 28

   36 Body: tBO Content . tBC

    tBC  shift, and go to state 42


State 29

    6 ParamsNext: tCOM tINT tID . ParamsNext

    tCOM  shift, and go to state 12

    $default  reduce using rule 7 (ParamsNext)

    ParamsNext  go to state 43


State 30

   30 Allocation: tID tEQU . Arithm tSM

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 46

    Arithm  go to state 47


State 31

   40 FunctionCall: tID tPO . Arguments tPC tSM

    tID  shift, and go to state 48

    $default  reduce using rule 39 (Arguments)

    Arguments  go to state 49


State 32

   16 If: tIF tPO . Conditions tPC Body

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 50

    Condition   go to state 51
    Conditions  go to state 52
    Arithm      go to state 53


State 33

   17 While: tWHILE tPO . Conditions tPC Body

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 50

    Condition   go to state 51
    Conditions  go to state 54
    Arithm      go to state 53


State 34

   37 Print: tPRT tPO . tID tPC tSM

    tID  shift, and go to state 55


State 35

   31 Declarations: tINT tID . DeclarationsNext tSM
   32             | tINT tID . tEQU Arithm DeclarationsNext tSM

    tEQU  shift, and go to state 56
    tCOM  shift, and go to state 57

    $default  reduce using rule 35 (DeclarationsNext)

    DeclarationsNext  go to state 58


State 36

   41 Content: If Content .

    $default  reduce using rule 41 (Content)


State 37

   42 Content: While Content .

    $default  reduce using rule 42 (Content)


State 38

   44 Content: Allocation Content .

    $default  reduce using rule 44 (Content)


State 39

   43 Content: Declarations Content .

    $default  reduce using rule 43 (Content)


State 40

   46 Content: Print Content .

    $default  reduce using rule 46 (Content)


State 41

   45 Content: FunctionCall Content .

    $default  reduce using rule 45 (Content)


State 42

   36 Body: tBO Content tBC .

    $default  reduce using rule 36 (Body)


State 43

    6 ParamsNext: tCOM tINT tID ParamsNext .

    $default  reduce using rule 6 (ParamsNext)


State 44

   18 Arithm: tID . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 63


State 45

   19 Arithm: tNB . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 64


State 46

   20 Arithm: tPO . Arithm tPC ArithmNext

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 46

    Arithm  go to state 65


State 47

   30 Allocation: tID tEQU Arithm . tSM

    tSM  shift, and go to state 66


State 48

   38 Arguments: tID . Arguments

    tID  shift, and go to state 48

    $default  reduce using rule 39 (Arguments)

    Arguments  go to state 67


State 49

   40 FunctionCall: tID tPO Arguments . tPC tSM

    tPC  shift, and go to state 68


State 50

   12 Conditions: tPO . Condition tPC ConditionsNext
   20 Arithm: tPO . Arithm tPC ArithmNext

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 46

    Condition  go to state 69
    Arithm     go to state 70


State 51

   11 Conditions: Condition . ConditionsNext

    tAND  shift, and go to state 71
    tOR   shift, and go to state 72

    $default  reduce using rule 15 (ConditionsNext)

    ConditionsNext  go to state 73


State 52

   16 If: tIF tPO Conditions . tPC Body

    tPC  shift, and go to state 74


State 53

    8 Condition: Arithm . tEEQU Arithm
    9          | Arithm . tGTH Arithm
   10          | Arithm . tLTH Arithm

    tGTH   shift, and go to state 75
    tLTH   shift, and go to state 76
    tEEQU  shift, and go to state 77


State 54

   17 While: tWHILE tPO Conditions . tPC Body

    tPC  shift, and go to state 78


State 55

   37 Print: tPRT tPO tID . tPC tSM

    tPC  shift, and go to state 79


State 56

   32 Declarations: tINT tID tEQU . Arithm DeclarationsNext tSM

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 46

    Arithm  go to state 80


State 57

   33 DeclarationsNext: tCOM . tID tEQU Arithm DeclarationsNext
   34                 | tCOM . tID DeclarationsNext

    tID  shift, and go to state 81


State 58

   31 Declarations: tINT tID DeclarationsNext . tSM

    tSM  shift, and go to state 82


State 59

   21 ArithmNext: tADD . tID ArithmNext
   25           | tADD . tNB ArithmNext

    tID  shift, and go to state 83
    tNB  shift, and go to state 84


State 60

   22 ArithmNext: tSUB . tID ArithmNext
   26           | tSUB . tNB ArithmNext

    tID  shift, and go to state 85
    tNB  shift, and go to state 86


State 61

   23 ArithmNext: tMUL . tID ArithmNext
   27           | tMUL . tNB ArithmNext

    tID  shift, and go to state 87
    tNB  shift, and go to state 88


State 62

   24 ArithmNext: tDIV . tID ArithmNext
   28           | tDIV . tNB ArithmNext

    tID  shift, and go to state 89
    tNB  shift, and go to state 90


State 63

   18 Arithm: tID ArithmNext .

    $default  reduce using rule 18 (Arithm)


State 64

   19 Arithm: tNB ArithmNext .

    $default  reduce using rule 19 (Arithm)


State 65

   20 Arithm: tPO Arithm . tPC ArithmNext

    tPC  shift, and go to state 91


State 66

   30 Allocation: tID tEQU Arithm tSM .

    $default  reduce using rule 30 (Allocation)


State 67

   38 Arguments: tID Arguments .

    $default  reduce using rule 38 (Arguments)


State 68

   40 FunctionCall: tID tPO Arguments tPC . tSM

    tSM  shift, and go to state 92


State 69

   12 Conditions: tPO Condition . tPC ConditionsNext

    tPC  shift, and go to state 93


State 70

    8 Condition: Arithm . tEEQU Arithm
    9          | Arithm . tGTH Arithm
   10          | Arithm . tLTH Arithm
   20 Arithm: tPO Arithm . tPC ArithmNext

    tGTH   shift, and go to state 75
    tLTH   shift, and go to state 76
    tEEQU  shift, and go to state 77
    tPC    shift, and go to state 91


State 71

   14 ConditionsNext: tAND . Conditions

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 50

    Condition   go to state 51
    Conditions  go to state 94
    Arithm      go to state 53


State 72

   13 ConditionsNext: tOR . Conditions

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 50

    Condition   go to state 51
    Conditions  go to state 95
    Arithm      go to state 53


State 73

   11 Conditions: Condition ConditionsNext .

    $default  reduce using rule 11 (Conditions)


State 74

   16 If: tIF tPO Conditions tPC . Body

    tBO  shift, and go to state 14

    Body  go to state 96


State 75

    9 Condition: Arithm tGTH . Arithm

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 46

    Arithm  go to state 97


State 76

   10 Condition: Arithm tLTH . Arithm

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 46

    Arithm  go to state 98


State 77

    8 Condition: Arithm tEEQU . Arithm

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 46

    Arithm  go to state 99


State 78

   17 While: tWHILE tPO Conditions tPC . Body

    tBO  shift, and go to state 14

    Body  go to state 100


State 79

   37 Print: tPRT tPO tID tPC . tSM

    tSM  shift, and go to state 101


State 80

   32 Declarations: tINT tID tEQU Arithm . DeclarationsNext tSM

    tCOM  shift, and go to state 57

    $default  reduce using rule 35 (DeclarationsNext)

    DeclarationsNext  go to state 102


State 81

   33 DeclarationsNext: tCOM tID . tEQU Arithm DeclarationsNext
   34                 | tCOM tID . DeclarationsNext

    tEQU  shift, and go to state 103
    tCOM  shift, and go to state 57

    $default  reduce using rule 35 (DeclarationsNext)

    DeclarationsNext  go to state 104


State 82

   31 Declarations: tINT tID DeclarationsNext tSM .

    $default  reduce using rule 31 (Declarations)


State 83

   21 ArithmNext: tADD tID . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 105


State 84

   25 ArithmNext: tADD tNB . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 106


State 85

   22 ArithmNext: tSUB tID . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 107


State 86

   26 ArithmNext: tSUB tNB . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 108


State 87

   23 ArithmNext: tMUL tID . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 109


State 88

   27 ArithmNext: tMUL tNB . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 110


State 89

   24 ArithmNext: tDIV tID . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 111


State 90

   28 ArithmNext: tDIV tNB . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 112


State 91

   20 Arithm: tPO Arithm tPC . ArithmNext

    tADD  shift, and go to state 59
    tSUB  shift, and go to state 60
    tMUL  shift, and go to state 61
    tDIV  shift, and go to state 62

    $default  reduce using rule 29 (ArithmNext)

    ArithmNext  go to state 113


State 92

   40 FunctionCall: tID tPO Arguments tPC tSM .

    $default  reduce using rule 40 (FunctionCall)


State 93

   12 Conditions: tPO Condition tPC . ConditionsNext

    tAND  shift, and go to state 71
    tOR   shift, and go to state 72

    $default  reduce using rule 15 (ConditionsNext)

    ConditionsNext  go to state 114


State 94

   14 ConditionsNext: tAND Conditions .

    $default  reduce using rule 14 (ConditionsNext)


State 95

   13 ConditionsNext: tOR Conditions .

    $default  reduce using rule 13 (ConditionsNext)


State 96

   16 If: tIF tPO Conditions tPC Body .

    $default  reduce using rule 16 (If)


State 97

    9 Condition: Arithm tGTH Arithm .

    $default  reduce using rule 9 (Condition)


State 98

   10 Condition: Arithm tLTH Arithm .

    $default  reduce using rule 10 (Condition)


State 99

    8 Condition: Arithm tEEQU Arithm .

    $default  reduce using rule 8 (Condition)


State 100

   17 While: tWHILE tPO Conditions tPC Body .

    $default  reduce using rule 17 (While)


State 101

   37 Print: tPRT tPO tID tPC tSM .

    $default  reduce using rule 37 (Print)


State 102

   32 Declarations: tINT tID tEQU Arithm DeclarationsNext . tSM

    tSM  shift, and go to state 115


State 103

   33 DeclarationsNext: tCOM tID tEQU . Arithm DeclarationsNext

    tID  shift, and go to state 44
    tNB  shift, and go to state 45
    tPO  shift, and go to state 46

    Arithm  go to state 116


State 104

   34 DeclarationsNext: tCOM tID DeclarationsNext .

    $default  reduce using rule 34 (DeclarationsNext)


State 105

   21 ArithmNext: tADD tID ArithmNext .

    $default  reduce using rule 21 (ArithmNext)


State 106

   25 ArithmNext: tADD tNB ArithmNext .

    $default  reduce using rule 25 (ArithmNext)


State 107

   22 ArithmNext: tSUB tID ArithmNext .

    $default  reduce using rule 22 (ArithmNext)


State 108

   26 ArithmNext: tSUB tNB ArithmNext .

    $default  reduce using rule 26 (ArithmNext)


State 109

   23 ArithmNext: tMUL tID ArithmNext .

    $default  reduce using rule 23 (ArithmNext)


State 110

   27 ArithmNext: tMUL tNB ArithmNext .

    $default  reduce using rule 27 (ArithmNext)


State 111

   24 ArithmNext: tDIV tID ArithmNext .

    $default  reduce using rule 24 (ArithmNext)


State 112

   28 ArithmNext: tDIV tNB ArithmNext .

    $default  reduce using rule 28 (ArithmNext)


State 113

   20 Arithm: tPO Arithm tPC ArithmNext .

    $default  reduce using rule 20 (Arithm)


State 114

   12 Conditions: tPO Condition tPC ConditionsNext .

    $default  reduce using rule 12 (Conditions)


State 115

   32 Declarations: tINT tID tEQU Arithm DeclarationsNext tSM .

    $default  reduce using rule 32 (Declarations)


State 116

   33 DeclarationsNext: tCOM tID tEQU Arithm . DeclarationsNext

    tCOM  shift, and go to state 57

    $default  reduce using rule 35 (DeclarationsNext)

    DeclarationsNext  go to state 117


State 117

   33 DeclarationsNext: tCOM tID tEQU Arithm DeclarationsNext .

    $default  reduce using rule 33 (DeclarationsNext)
